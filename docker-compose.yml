version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://backend:8000/api
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www
      - /var/www/vendor
    environment:
      - APP_ENV=local
      - APP_KEY=base64:TNY623rR9Ecy2PNdDu/WK7Nj0GuDZWeC1yrilMN6/68=
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - SESSION_DRIVER=database
      - SESSION_CONNECTION=pgsql
      - SESSION_LIFETIME=120
      - REVERB_APP_ID=277947
      - REVERB_APP_KEY=lv8mlkmwpdv5ohazsxhr
      - REVERB_APP_SECRET=6dqrb7xbirvwdnxs5ltd
      - REVERB_HOST=localhost
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      - BROADCAST_DRIVER=reverb
      - BROADCAST_CONNECTION=reverb
      - OPENAI_API_KEY=...
      - REDIS_CLIENT=predis
      - REDIS_HOST=redis
      - CACHE_STORE=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=1000'
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    
  rag:
    build:
      context: ./RAG
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
